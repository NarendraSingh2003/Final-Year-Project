
import React from 'react';
import { cn } from '@/lib/utils';
import BlurContainer from '../ui/BlurContainer';
import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, Legend } from 'recharts';
import { SeverityLevel } from './VulnerabilityCard';

interface VulnerabilityChartProps {
  className?: string;
  data: Array<{
    date: string;
    [key: string]: number | string;
  }>;
  type?: 'area' | 'bar';
  title: string;
  height?: number;
  showLegend?: boolean;
}

const severityColors: Record<SeverityLevel, string> = {
  critical: '#f43f5e',
  high: '#ff8c38',
  medium: '#fbbf24',
  low: '#22c55e',
  info: '#3b82f6',
};

const VulnerabilityChart: React.FC<VulnerabilityChartProps> = ({
  className,
  data,
  type = 'area',
  title,
  height = 300,
  showLegend = true,
}) => {
  // Get all keys except 'date' to use as chart lines/bars
  const dataKeys = Object.keys(data[0] || {}).filter(key => key !== 'date');

  return (
    <BlurContainer className={cn("", className)}>
      <h3 className="text-base font-medium mb-4">{title}</h3>
      
      <div className="h-full" style={{ height: height }}>
        <ResponsiveContainer width="100%" height="100%">
          {type === 'area' ? (
            <AreaChart data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>
              <defs>
                {dataKeys.map((key) => (
                  <linearGradient key={key} id={`color-${key}`} x1="0" y1="0" x2="0" y2="1">
                    <stop offset="5%" stopColor={severityColors[key as SeverityLevel] || '#8884d8'} stopOpacity={0.8} />
                    <stop offset="95%" stopColor={severityColors[key as SeverityLevel] || '#8884d8'} stopOpacity={0.1} />
                  </linearGradient>
                ))}
              </defs>
              <XAxis dataKey="date" tick={{ fontSize: 12 }} />
              <YAxis tick={{ fontSize: 12 }} />
              <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#E0E0E0" />
              <Tooltip 
                contentStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', borderRadius: '8px', backdropFilter: 'blur(8px)', border: '1px solid rgba(255, 255, 255, 0.2)' }}
              />
              {showLegend && <Legend wrapperStyle={{ fontSize: '12px' }} />}
              
              {dataKeys.map((key) => (
                <Area
                  key={key}
                  type="monotone"
                  dataKey={key}
                  stroke={severityColors[key as SeverityLevel] || '#8884d8'}
                  fillOpacity={1}
                  fill={`url(#color-${key})`}
                  name={key.charAt(0).toUpperCase() + key.slice(1)}
                  strokeWidth={2}
                />
              ))}
            </AreaChart>
          ) : (
            <BarChart data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>
              <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#E0E0E0" />
              <XAxis dataKey="date" tick={{ fontSize: 12 }} />
              <YAxis tick={{ fontSize: 12 }} />
              <Tooltip 
                contentStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.8)', borderRadius: '8px', backdropFilter: 'blur(8px)', border: '1px solid rgba(255, 255, 255, 0.2)' }}
              />
              {showLegend && <Legend wrapperStyle={{ fontSize: '12px' }} />}
              
              {dataKeys.map((key) => (
                <Bar
                  key={key}
                  dataKey={key}
                  fill={severityColors[key as SeverityLevel] || '#8884d8'}
                  name={key.charAt(0).toUpperCase() + key.slice(1)}
                  radius={[4, 4, 0, 0]}
                />
              ))}
            </BarChart>
          )}
        </ResponsiveContainer>
      </div>
    </BlurContainer>
  );
};

export default VulnerabilityChart;
